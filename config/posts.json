{
  "posts": [
    {
      "content": "\r\n```java\r\npublic class TwoSum {\r\n     public static int[] twoSum(int[] numbers, int target) {\r\n        int high = numbers.length - 1, low = 0;\r\n        while (low < high) {\r\n            int sum = numbers[low] + numbers[high];\r\n            if (sum == target) {\r\n                return new int[] { low + 1, high + 1 };\r\n            } else if (sum > target) {\r\n                --high;\r\n            } else {\r\n                ++low;\r\n            }\r\n        }\r\n        return new int[] { -1, -1 };\r\n    }\r\n\r\n    public static int[] twoSum1(int[] numbers, int target) {\r\n        for (int i = 0; i < numbers.length; ++i) {\r\n            int low = i + 1, high = numbers.length - 1;\r\n            while (low < high) {\r\n                int mid = (high - low) / 2 + low;\r\n                if (target == numbers[mid] + numbers[i]) {\r\n                    return new int[] { i + 1, mid + 1 };\r\n                } else if (target > numbers[mid] + numbers[i]) {\r\n                    low = mid + 1;\r\n                } else {\r\n                    high = mid - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        return new int[] { -1, -1 };\r\n    }\r\n}\r\n```",
      "data": {
        "title": "两数之和",
        "date": "2023-03-07 21:12:31",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "liang-shu-zhi-he"
    },
    {
      "content": "给定一个机票的字符串二维数组 [from, to]，子数组中的两个成员分别表示飞机出发和降落的机场地点，对该行程进行重新规划排序。所有这些机票都属于一个从 JFK（肯尼迪国际机场）出发的先生，所以该行程必须从 JFK 开始。\r\n\r\n\r\n<!-- more -->\r\n这个问题和 七桥问题 相同，看能不能一次性的走完机场。\r\n\r\n```java\r\npublic List<String> findItinerary(List<List<String>> tickets) {\r\n        List<String> res = new ArrayList<>();\r\n        Map<String, PriorityQueue<String>> map = new HashMap<>(16);\r\n//        邻接表\r\n        for (List<String> list :\r\n                tickets) {\r\n            String dep = list.get(0), destination = list.get(1);\r\n            if (!map.containsKey(dep)) {\r\n                map.put(dep, new PriorityQueue<>());\r\n            }\r\n            map.get(dep).offer(destination);\r\n        }\r\n        dfs(map, res, \"JFK\");\r\n    // 逆序反转\r\n        Collections.reverse(res);\r\n        return res;\r\n    }\r\n\r\n    private void dfs(Map<String, PriorityQueue<String>> map, List<String> res, String dep) {\r\n        while (map.containsKey(dep) && map.get(dep).size() > 0) {\r\n            String tem = map.get(dep).poll();\r\n            dfs(map, res, tem);\r\n        }\r\n        res.add(dep);\r\n    }\r\n```",
      "data": {
        "title": "重新安排行程",
        "date": "2023-03-07 20:57:29",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "给定一个机票的字符串二维数组 [from, to]，子数组中的两个成员分别表示飞机出发和降落的机场地点，对该行程进行重新规划排序。所有这些机票都属于一个从 JFK（肯尼迪国际机场）出发的先生，所以该行程必须从 JFK 开始。\r",
      "fileName": "chong-xin-an-pai-xing-cheng"
    },
    {
      "content": "> 欢迎来到我的小站呀，很高兴遇见你！🤝\n\n\n\n## 📬 联系我呀\n\n",
      "data": {
        "title": "关于",
        "date": "2019-01-25 19:09:48",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "about"
    }
  ],
  "tags": [],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    }
  ]
}